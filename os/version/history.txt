**------------------------------------------------------------------------------------
** FamesOS VER 0.7.1:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  修正了一些BUG
    2)  在DEMO中加入了一些有关GUI的演示

版本:

    FamesOS-0.7.1, 2011-5-26

作者:

    Jun(Email: wsj20369@yahoo.com.cn, QQ: 1135035506)

笔记:

    在进行除法运算时, 一定要检查除数是否为0的问题!!!


**------------------------------------------------------------------------------------
** FamesOS VER 0.7.0:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  开始使用git来管理源程序

版本:

    FamesOS-0.7.0, 2011-5-14

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

    0.7版, 呵呵~~

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.32:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  修正了一些BUG
    2)  SLC修正了一些BUG

版本:

    FamesOS-0.6.32, 2011-4-25

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

    至此, 关于FamesOS的第一个实例SLC完成(未完全测试)!

    该版本是0.6的最后一个版本.

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.31:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  修正了一些BUG
    2)  SLC中英文切换部分完成

版本:

    FamesOS-0.6.31, 2011-4-23

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.30:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  修正了一些BUG
    2)  SLC基本功能完成


版本:

    FamesOS-0.6.30, 2011-4-21

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.29:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  修正了一些BUG.
    2)  VIEW控件有一点小改动: 在VIEW_STYLE_NONE_SELECT风格下, 在编辑时, 同行的
                              元素会自动刷新(以前不会).
    3)  PLC部分也有一点改动(主要有PLC_ACTION部分及plc_action_daemon等).

版本:

    FamesOS-0.6.29, 2011-4-13

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.28:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  FIX: TaskResume()函数中有一个错误(line713): 这个函数里会把TCB的TaskTimer置0,
                这时如果任务又在睡眠的话, 将无法醒过来.
    2)  SLC: 继续...

版本:

    FamesOS-0.6.28, 2011-4-8

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.27:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  FIX: draw_font_for_widget()在显示右对齐文本时会有问题, 已改正
    2)  SLC: 加入了订单文件的管理
    3)  SLC: 加入了密码输入对话框

版本:

    FamesOS-0.6.27, 2011-3-31

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.26:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  重新设计了VIEW控件, 以使其支持编辑功能
    2)  删除了系统中所有的"__far"标识字
    3)  删除了系统中所有的用于改变函数返回值类型的"(void)"

版本:

    FamesOS-0.6.26, 2011-3-25

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

    1) 关于__far:  当初加入__far标识字本意是为了可移植性, 不过现在看来, 这不仅是有点
                   多余, 甚至还带来了一定的困扰(因为经常需要考虑要不要用它),
                   所以在这一版本中删除了这个标识字: __far
    2) 关于(void): 当某个函数有返回值而我们又不需要的时候, 它的返回值就会丢失,
                   而lint会由此给出一个警告, 当初为了这个警告, 而特意在调用这类
                   函数时加上(void), 比如:

                   int f1(void)      //有返回值的函数
                   {
                       return 5;
                   }

                   int caller(void)  //调用函数
                   {
                       (void)f1();   //不需要返回值, 所以在f1()之前加上了(void)
                   }

                   现在想想, 其实没有必要, 所以就删除了它们.
    3) 关于VIEW:   VIEW现在支持编辑功能了, 呵呵~~~
    4) 该版本经过了lint的检查(只OS部分).

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.25:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  SLC: 监控画面继续完成
    2)  GUI: 增加了输入对话框
    3)  SLC: SLC-CORE中增加了一些断言语句
    4)  KNL: 修改了TaskCreate函数, 增加了一个参数TaskStack, 用于指定预先定义的堆栈空间
    5)  重新设计了VIEW控件, 尚未完成...
    6)  将"控件"重新命名为"widget"(以前是"control", 呵呵~)

想到的:



版本:

    FamesOS-0.6.25, 2011-3-23

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

    1) 要使用SLC-CORE中的函数, 必须先调用初始化函数slc_initialize(),
       该函数会为SLC-CORE分配必要的内存空间.
    2) 在TaskCreate()函数当中, 当参数TaskStack不为空时, 那么就认为它是一个已定义好的
       内存区域(数组或者是已分配的内存), 这时的StackSize是其字节数;
       而当TaskStack为空时, TaskCreate()将会为堆栈自动分配内存, 
       这时的StackSize是堆栈单元(STACK_TYPE)数, 而不是字节数.
    3) VIEW似乎应该支持编辑功能, 所以决定重新设计它.
    4) 刚开始设计GUI时, 怎么也想不出"控件"该怎么命名, 就乱用"control"来顶上, 
       现在终于知道了, "widget"才是我想要的, ~~~

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.24:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  继续SLC设计...(监控画面基本完成)
    2)  修正了一些BUG

想到的:



版本:

    FamesOS-0.6.24, 2011-3-14

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:


**------------------------------------------------------------------------------------
** FamesOS VER 0.6.23:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  FIX: draw_font_for_widget()[font.c+521]
    2)  增加了一个新的控件: GUI_WIDGET_VIEW
    3)  继续SLC设计......(主界面基本完成)

想到的:



版本:

    FamesOS-0.6.23, 2011-3-9

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

    这个版本尚未经过LINT的检查.

    --------------------------

    GUI_WIDGET_VIEW控件好象有一点复杂, 不过效果还不错, 需要继续测试......
    
**------------------------------------------------------------------------------------
** FamesOS VER 0.6.22:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  修正了不少错误
    2)  继续SLC设计......(主界面基本完成)

想到的:



版本:

    FamesOS-0.6.22, 2011-3-8

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

    这个版本尚未经过LINT的检查.
    
**------------------------------------------------------------------------------------
** FamesOS VER 0.6.21:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  修正了很多错误, 比如draw_font_for_widget()函数等
    2)  增加了几个新的控件(DASHED, SYS_MNTR等)
    3)  继续完善控件部分......
    4)  继续SLC设计......

想到的:

    1)  需研究一下控制台驱动.


版本:

    FamesOS-0.6.21, 2011-3-4

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

    原来, 错误还真不少啊!!!

    ----------------------

    这个版本相对上版来说, 修改的地方不少, 也更正了不少错误, 但是还没有经过LINT的检查.
    
**------------------------------------------------------------------------------------
** FamesOS VER 0.6.20:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  增加了一种临界区保护方法ENTER_CRITICAL()/EXIT_CRITICAL()[在文件task.h中]
    2)  FIX: 由于内核锁与其它锁使用混乱, 导致了内核死锁的发生, 于是就清理了一下
    

想到的:

    1)  需研究一下控制台驱动.


版本:

    FamesOS-0.6.20, 2011-02-22

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

    在测试时间片轮转算法(Round-Robin)时, 发现系统失去了抢占性, 而始终只有一个任务
    在那里执行. 经过仔细检查, 发现原来是加了调度锁, 怎么会加了调度锁呢???

    原来, 在有的函数中, 先是加了调度锁, 然后又要获取信号量(或互斥锁等), 如果获取
    失败呢, 就直接阻塞了, 而没有打开调度锁, 

    这时如果有另一个"不愿意主动放弃CPU"的任务得到了调度, 那么它将一直执行下去,
    而其它的任务将再也得不到执行的机会.
    
**------------------------------------------------------------------------------------
** FamesOS VER 0.6.19:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  增加了一个文件include\knl\core.h, 用于存放核心选项及数据
    2)  增加了时间片轮转调度算法, 使具有相同优先级的任务之间以时间片轮转算法调度.
    

想到的:

    1)  需研究一下控制台驱动.


版本:

    FamesOS-0.6.19, 2011-02-17

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

    目前, FamesOS的调度算法可概括为:

    不同优先级任务之间以优先级调度, 具有相同优先级的任务之间以时间片轮转算法调度.

    要使用时间片轮转调度算法, 首先要有如下定义(在include\knl\core.h中):

        #define DISPATCH_PREEMPTIVE_EN  1     /* 抢先式调度,     1=支持 */
        #define DISPATCH_ROUNDROBIN_EN  1     /* 时间片轮转调度, 1=支持 */

    然后要在程序中调用SetTimeSlice(val)设置时间片大小,

        当 val=0 时, 时间片轮转调度算法处于关闭状态
        当 val>0 时, 时间片轮转调度算法开始工作!

    需特别注意的是: 时间片轮转算法只工作于具有相同优先级的任务之间!
    
**------------------------------------------------------------------------------------
** FamesOS VER 0.6.18a:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  继续字体模块的开发...
    2)  GUI基本控件的完善...
    3)  应用程序框架模型的建立...
    4)  增加了一个函数draw_font_for_widget()[font.c+433]
    5)  修正了一些BUG
    6)  开始了一个实例项目: SLC
    

想到的:

    1)


版本:

    FamesOS-0.6.18a, 2011-01-24

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.17:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  加入了字体模块, 设定HZK14与ASC14为系统默认字体
    

想到的:

    1)


版本:

    FamesOS-0.6.17, 2010-12-30

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.16:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  编写了文档doc/udp-port.txt, 说明了UDP相关函数的使用方法.
    2)  增加了XMS管理模块, 用于简化XMS的分配与释放问题.
    3)  增加了PICTURE控件, 并经过了测试.
    4)  修正了BMP中的一个BUG:
        gui/res/bmp.c: LoadBmp()第123行的fclose()原来放在了117行(fread()的下面),
        这导致了第二次for循环时读文件失败(因为文件已经被fclose()关闭了).
    5)  修正了XMS中的一些小错误.
    

想到的:

    1)


版本:

    FamesOS-0.6.16, 2010-12-27

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.15:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  加入了管理UDP端口的功能(NET模块)
    

想到的:

    1)


版本:

    FamesOS-0.6.15, 2010-12-26

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:


**------------------------------------------------------------------------------------
** FamesOS VER 0.6.14:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  初步设计了一些基本控件, 具体有FORM, LABEL, EDIT, BUTTON, PROGRESS
    2)  增加了用户自定义控件的功能(即可以注册新控件)


想到的:

    1)


版本:

    FamesOS-0.6.14, 2010-12-25

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:


**------------------------------------------------------------------------------------
** FamesOS VER 0.6.13:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  设计了一个简单的GUI框架, 并写了第一种控件的代码: FORM;


想到的:

    1)  可能要实现用户自定义控件的功能(即可以注册新控件)


版本:

    FamesOS-0.6.13, 2010-12-23

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

    GUI系统中的所有控件组成了一棵控件树, GUI服务器定时扫描这棵树, 并作出必要的处理.

    目前版本的GUI系统仅作为一个映射变量到屏幕(控件)的作用.

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.12:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  GUI...


想到的:

    1)


版本:

    FamesOS-0.6.12, 2010-12-21

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:


**------------------------------------------------------------------------------------
** FamesOS VER 0.6.11:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  实现了控制台模块的一个stub
    2)  PLC模块继续测试...


想到的:

    1)  再看GUI...


版本:

    FamesOS-0.6.11, 2010-12-21

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

    这里所说的控制台可能根本就算不上是真正的控制台, 因为太简单了, 
    简单到连控制台本身的功能都没有了, :)

    这里可能只是实现了一个控制台的影子, 具体的真正的功能需要将来再加了.

    不过, 这个控制台还是有意义的, 它现在只是将按键服务包装了一次, 对一个
    任务能否取键进行了简单的限制, 目前来说, 它已满足我的要求了.

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.10:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  在PLC模块中加入了API层接口, 使应用编程更加方便.
    2)  实现了一个小小的上升沿与下降沿检测功能(edge.h)
    3)  PLC模块继续测试...


想到的:

    5)  需要实现控制台驱动


版本:

    FamesOS-0.6.10, 2010-12-19

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:

    可以查看文件doc/plc.txt, 以获得关于PLC模块的使用方法

    边沿检测宏定义: edge_up()/edge_dn()分别用来检测一个状态的上升沿与下降沿

      例如: 

        int val=0, val_up=0, val_dn=0; //初始化是必要的...

        if(edge_up(val, val_up)){  // val_up是检测val上升沿的辅助变量, 是必须的!
            //上升沿到来......
        }

        if(edge_dn(val, val_dn)){  // val_dn是检测val下降沿的辅助变量, 是必须的!
            //下降沿到来......
        }

    须特别注意的是, edge_dn会自动执行一次(即返回真), 这是因为val=0且val_dn=0,
    正是edge_dn返回真的条件, 解决的方法是: 将val_dn初始化为1而不是0, 如下:

        int val=0, val_up=0, val_dn=1; //这是比较好的定义

        ...
        ...

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.9:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  初步测试了PLC模块(仅永宏PLC), 更正了一些错误;


想到的:

    5)  需要实现控制台驱动


版本:

    FamesOS-0.6.9, 2010-12-18

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

心得:  

    不知为什么, 在DOSBOX中, PLC模块不能正常工作: 无法从中断接收串口数据.

    <<< 根据测试发现, 上述问题可能是由于DOSBOX太慢导致的(我的机子是有点慢:)

    在读写PLC时, 尽量避免单个读写, 尤其是单点, 最好是组合起来读写:

    比如: 要读写从M16到M25这10个位, 最好采用直接读写WM16的方式, 而不要采用
          从M16到M25分立读写的方式. 这样可以提高速度.

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.8:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  用宏定义重新命名了远指针的标识关键字(__far/far), 提高其可移植性;
    2)  重新整理了部分代码(__far);
    3)  初步设计了内存管理模块;
    4)  将net模块的外部指针的类型改成了远指针;
    5)  更新了系统中所有的内存申请及释放动作(mem_alloc/mem_free)
    6)  基本完成了PLC模块的设计, 但尚需测试;
    7)  再次整理代码(__far), 将所有的指针类型按需要改为远指针类型(__far)
    8)  将app改成了demo
    9)  lint所有模块, 确保lint-clean状态

想到的:

    5)  需要实现控制台驱动


版本:

    FamesOS-0.6.8, 2010-12-08 ~ 2010-12-15
                   2010-12-17 ~ 2010-12-18

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:  

    1) 外部指针: 是指那些与其它模块有关联的指针, 比如函数参数等; 如果某一个
                 指针变量在其它模块有用到, 那么这个指针就可以称为是外部指针.
    2) 内存管理模块终于开张了, 虽然没有什么实质的内容(真正意义上的分配回收等)
       但对于内存分配的管理还是功不可没, 有了这个, 基本就可以不用担心内存的释
       放问题, 因为在程序退出时, 这些内存空间是肯定会被释放的(OnExit), 这样, 
       应用程序就只需要申请内存, 而完全不用关心释放的问题(好象有点吹牛:)呵~)
    3) 这个版本修正了不少错误, 加强了不少功能, 几乎是一次全局性的改动,呵呵!
    4) PLC模块终于写完了, 感觉还不错, 可能就是有点烦琐.
     
**------------------------------------------------------------------------------------
** FamesOS VER 0.6.7:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  在IRQ管理模块, 为每一个IRQ的中断服务程序均提供了独立的栈空间.

        ???但在链接的时候, 出现了错误(DGROUP exceeded 64K)

        ^^^此问题已改正: 之前IRQ堆栈空间是以数组的形式直接定义的,
                         目前已改为了空间动态分配(farmalloc)

    2)  加入了系统监测模块(MonitorService)


想到的:

    3)  需要实现一定程度的内存管理
    4)  plc模块需要支持多种多个PLC同时操作, 目前只支持一个plc
    5)  需要实现控制台驱动


版本:

    FamesOS-0.6.7, 2010-12-6

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:  

    在VirtualPC上运行时, 按键太快会引起程序当机, 并有错误消息: 

       Internal stack overflow, System halted

    需要找到这个问题...

    在DOS6.22及WinXP中均没有这个问题, 在DOSBOX中也没有这个问题.

    <<< 这个问题, 我想, 可能和中断时的堆栈有关系, 可能中断需要独立的堆栈吧.

    经过一定的考虑, "irq部分需要支持ISR输入参数"其实是不必要的, 原来想这样做是因
    为PLC模块需要支持多种多个PLC同时操作, 而这涉及到了PLC的中断服务程序共享问题,
    但现在, 我有了新的考虑...


**------------------------------------------------------------------------------------
** FamesOS VER 0.6.6:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  初始化部分移到了init.c中, 这样应用程序就可以不必再关心系统层面的初
        始化动作, 而只需关心应用程序自己

    2)  由于1)的改动, 应用程序的入口点由InitApplication()改成了start();
        start()是个任务函数, 运行于多任务环境之下.

    3)  再次重申: 应用程序的入口点为: start()任务, 在应用程序中, 必须定义一个像:

        void far start(void * data)
        {
            // task body
        }

        的函数, 来运行应用程序初始化动作, 并开始真正的工作!

    4)  增加了一组超级命令键, 以ALT-X为引导键:

        ALT-X, ALT-K: 强制退出程序

    5)  为网络模块(network)增加了初始化及退出例程, 还有一些附加的功能函数;

    6)  增加了网络数据包的钩子服务, 应用程序可用其截获经过网卡的数据包, 并进行处理.

    7)  新增文件(夹):

        net\net.h, net\net.c:   网络服务模块     
        net\hook.h, net\hook.c: 网络数据包的钩子服务
        shell文件夹:            将来可能需要实现shell
        monitor文件夹:          需要实现监测模块

    8)  文件更名:

        include\famesass.h => include\debug.h: 调试选项/断言定义

    9)  修改了knl\task.c>TaskStackCheck()函数, 增加了3个选项, 并更新了计算方式.


想到的:

    3)  irq部分需要支持用户ISR输入参数
    4)  plc模块需要支持多种多个PLC同时操作, 目前只支持一个plc
    5)  需要实现控制台驱动


版本:

    FamesOS-0.6.6, 2010-12-5

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:  

    在VirtualPC上运行时, 按键太快会引起程序当机, 并有错误消息: 

       Internal stack overflow, System halted

    需要找到这个问题...

    在DOS6.22及WinXP中均没有这个问题, 在DOSBOX中也没有这个问题.

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.5:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:

    1)  重新设计了key-service(按键服务), 添加了一个后台任务用于接收键码并初步处理
        按键来源有2个:
            1. 来自键盘按键
            2. 来自SYS_MSG_KEY消息
        按键处理具体有:
            1. 调用所有KEY-HOOK(键盘钩子)
            2. 处理所有SPECIAL-KEY(特殊键, 或快捷键)
            3. 如果不是SPECIAL-KEY, 那么就将这个键发送到当前控制台
        	
    2)  添加了键盘钩子与特殊键的注册与删除

    3)  添加了OnExit模块, 用于处理模块退出例程

    4)  OnExit模块与key-service模块经过了初步测试, 已通过, 但尚需进一步测试.

    5)  添加了如下文件(夹):

    	console.h, console.c  实现控制台模块
    	onexit.h,  onexit.c   实现OnExit模块
    	
    6)  文件(夹)更名:

        famesos.c  => init.c
        famesos.h  => init.h
        key.c      => keysvc.c
        key.h      => keysvc.h
        kernel     => knl(文件夹)


想到的:

    1)  net部分需要写初始化及OnExit例程
    4)  plc模块需要支持多种多个PLC同时操作, 目前只支持一个plc
    5)  需要实现控制台驱动



版本:

    FamesOS-0.6.5, 2010-12-4 0:06

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)


笔记:  


**------------------------------------------------------------------------------------
** FamesOS VER 0.6.4:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)

修改:
    1)  重新lint所有文件，使代码达到了lint-clean状态.
    2)  重新组织了一部分文件，具体有:

        key.c:    从tool目录移到了drv目录
        log.c:    从tool目录移到了新的log目录, log目录是专为日志相关功能而建立的
        error.c:  同log.c
        misc:     将tool目录更名为misc

    3)  初步设计了gui的一部分

想到的:
    1)  net部分需要写初始化及OnExit例程
    2)  kernel需要提供RegisterOnExit等功能, 以注册模块退出例程
    3)  key模块要加一个后台处理任务, 读取按键并初步处理, 
    4)  plc模块需要支持多种多个PLC同时操作, 目前只支持一个plc
        

BUG-FIX:


版本:

    FamesOS-0.6.4, 2010-12-2

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)


笔记:  

    GUI......

    --------------

    PKTDRV: 如果网卡的IRQ=0xFF, 似乎PKTDRV便不能接收数据, 还要再想想办法~~~

    今天测了一次APP与APP的通讯, 结果怎么也联不上, 后来才发现, 
    原来是两台机器的网卡速度不同(一个是100Mbpm, 另一个是10Mbpm), 以后要多加注意!!!

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.3:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)
    2)  在使用PKTDRV时为不可抢占式内核

修改:

    1)  修改了tftpd服务器部分: 当没有连接时, 应关闭等待客户的定时器(TimerTftpdRX) 
    2)  初步完成了任务间的message通讯, 并经过测试, 效果还不错
    3)  在task.c及task.h中加入了对message通讯的支持
    4)  加入了对PKTDRV的支持开关, 这样就可以很方便的关闭/开启PKTDRV功能了
    5)  初步设计了FamesOS/GUI模块


BUG-FIX:

    1)  tftpd: 当没有连接时, 应关闭等待客户的定时器(TimerTftpdRX) 
    2)  task:  在TaskDelete()函数中, 任务删除后应该调用InitTCB()将其初始化

版本:

    FamesOS-0.6.3, 2010-11-13

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)


笔记:  

    对lint还是不太会用, 需要继续努力哪~~~

    想了一想, 还是觉的mailbox似乎没有必要支持, 嗯, 要考虑考虑~~~

    --------

    今天再次开始研究GUI, 

    --------

    ltall了一次, 跳出来的警告真是多的吓人, 赶紧修改, 少了一些, 但还是有不少, 
    看来得找个时间好好看看了.

    --------

    终于开始正式的GUI设计了, 虽然功能不是很完善, 但事情总是发展的嘛, 呵呵
    
**------------------------------------------------------------------------------------
** FamesOS VER 0.6.2:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)
    2)  在使用PKTDRV时为不可抢占式内核

修改:

    1)  修改了tftpd服务器部分: 当不曾接收到客户端数据太久时(30秒), 
        则认为接收超时, 并断开与客户端的连接.
    2)  初步设计了任务间的message通讯


BUG-FIX:

    1)  如果一个客户端IP地址没有正常的与服务器结束连接(即文件传输完成), 
        那么其它的IP地址将永远连接不到服务器, 

        此版中增加了一个定时器用于解决此问题, 如果定时器超时, 则认为应该断开
        当前没有完成的连接, 提前结束文件传输(虽然传输不成功), 并为下一次连接做好准备!        


版本:

    FamesOS-0.6.2, 2010-11-9

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)


笔记:  

    在设计之初, 就决定了tftpd只能同时接受一个客户端的请求, 
    所以当有多个请求需要同时处理时, 程序的执行可能是不可预料的. 经过测试:

      在有多个请求需要同时处理时, 程序会当机!!!

    这样的话, tftpd就只能作为一个单独的文件传输工具来用, 而不能与真正的产品集成.

    不过, 其实本来就应该这样, 呵呵, ---- Jun, 2010/11/9

    -----------

    长久以来, 一直有个让我很困惑的问题: 在按下Ctrl-C之后, CPU的使用率马上就升高很多,
    今天终于明白, 原来在TaskMain中, Ctrl-C的功能竟然是创建另一个TaskStat系统统计任务!?
    Oh, my God, 原来如此!

    此版中还规划了一点点有关任务间通讯的部分(message, mailbox)
	
**------------------------------------------------------------------------------------
** FamesOS VER 0.6.1:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)
    2)  在使用PKTDRV时为不可抢占式内核

修改:

    1)  经过调试, 修改了部分代码, 现在R6040网卡也可以收发数据了(还是有问题的)

        重写了call_pktdrv_entry()函数, 在初始化pktdrv时, 用pktdrv_setup()来
        构造一个中断指令, 并放在__call_pktdrv_entry()的函数体中, 这样就可以以中
        断的方式调用PKTDRV入口了

BUG-FIX:

    1)  __pktdrv_receiver()应该在AX=0时保存收到的字节数(CX), 而不是在AX=1时保存,
        根据PKTDRV规范, CX值只有在AX=0时才有效.


版本:

    FamesOS-0.6.1, 2010-11-6

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)


笔记:  

    R6040可以收发数据了, 但只要一按Num-Lock或Caps-Lock键就会当机, 真是不明所以,

    看来, 还要找些资料来看了~~~

    又经过调试, 发现应是主板的问题(R8610芯片集, R6040集成网卡), 在设置Tmr0时
    (时钟芯片8253), 只要有如下代码(可用debug/softice来测试):
       out 0x43, 0x36
       out 0x40, ### ---- 比如2
       out 0x40, ### ---- 比如4
    那么在按Num-Lock或Caps-Lock键时, 就会引发IRQ7中断(或int 0xf), 真是奇怪的很,

    到此为止, 终于算是找到了一点问题, 由于FamesOS必须要将timer0设置为毫秒发生器, 
    所以这个主板是无法支持了, 不过, 还是要再研究研究~~~

    在这个主板上, softice好象也不能正常工作, 单步几下就当机或者就不知道跳到哪里去了

    ----------

    看了RDC的datasheet之后, 终于明白, 原来这是人家的一个基于安全的考虑, 
    当中断触发信号太短(也就是说在INTA_n下降沿之前就结束了), 就会有一个IRQ7送出
    可是, 这真的不是一个好动作, 但还是有不明白的地方:

        TMR0, Num-Lock或Caps-Lock, 太短的中断信号, 这些到底是怎么联系起来的???

    如果非要用这个板子(R8610芯片集), 那么在CMOS中一定要将IRQ7设为"Reserved", 
    并用IrqConnect()将IRQ7连接到一个空的函数, 只有这样, 才能在以后放心的使用IRQ7!!!

	例子: 

        INT16S null_irq7(void)      //定义一个空的函数		
        {
            return fail;            //必须返回fail
        }

        IrqConnect(7, null_irq7);   //在InitApplication()如此调用即可.


    不管怎么样, 对PKTDRV算是告一段落了, 下面就应该研究下NDIS2了，~~~

    这一版本到此为止: 0.6.1

**------------------------------------------------------------------------------------
** FamesOS VER 0.6.0:
**------------------------------------------------------------------------------------
描述:

    1)  FamesOS实时操作系统(RTOS)
    2)  在使用PKTDRV时为不可抢占式内核

修改:

    1)  加入对PacketDriver类网卡驱动的支持
    2)  版本号改为0.6, 这是因为在网卡驱动方面, 有较大改进(如支持PKTDRV等)

BUG-FIX:

    1)  os\net\arp.c>>get_mac()+273行, 用ARP解析地址时实现的不太合理, 
        以前的实现会导致无谓的任务睡眠, 现在的实现相对要合理一些~~~


版本:

    FamesOS-0.6.0, 2010-11-5

作者:

    Jun(Email: FamesOS@126.com, QQ: 1135035506)


笔记:  

    目前来说, 对PKTDRV的支持很不好, 非常的不稳定, 也不知道该如何调试才好, 
    那个可怜的PKTDRV规范看了一遍又一遍, 真的不明白, 一个规范(SPEC)怎么会写的
    这么少, 而且这么的不完整, 真是费解, 难道是我没有找到真正的版本?

    嗯, 不管怎么说, 这是个开始, 继续努力, 就一定会突破困难, 直取胜利的, 呵呵

    这个版本不稳定, 需继续测试.

经验:

    经过了一天的调试, 得到了不少教训, 在写回调函数时, 尤其是给中断
    服务程序调用的函数时(如void __pktdrv_receiver(void)), 一定要处理好
    数据段寄存器DS的数值, 因为在中断中, DS的值可能不是回调函数所在段的值,
    而是一个任意值, 或者是中断服务函数的段值, 需格外注意!
    编译器(这里是TC2)喜欢在函数里加一些东西, 比如push si, push di等
    有时候, 这是问题的来源, 所以在编译之后, 最好用IDA看一下, 
    看看是否是我们想要的代码, 这个也很重要!!!

    经过运行测试, RTL8139C(D), E100B的网卡均工作正常, 但是R6040却始终有问题

    虽然如此, 还是要把它作为0.6.0版本备份, 呵呵 -- Jun, 2010/11/5

**------------------------------------------------------------------------------------
** FamesOS VER 0.5.125:
**------------------------------------------------------------------------------------
描述:

   1)  FamesOS实时操作系统(RTOS)

修改:

   1)  多窗口GUI系统初步设计(RECT, GDL, GAL等)


版本:

   FamesOS-0.5.125, 2010-9-30

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:  

   不过, 说真的, GUI的设计真的不容易, 而且看起来象是个理想的东西.
   经过一段时间的考虑, 决定暂停对"多窗口GUI系统"的设计, 在真正有需要的时候再说吧.

   想到的有关这个GUI系统的缺点:

   1) 由于具有窗口剪切的过程, 程序的运行可能比较慢
   2) 一些设想的特性还没有找到技术上的可行方法(如真彩色, 半透明效果, TrueType字体等)
   3) 速度, 还是速度

**------------------------------------------------------------------------------------
** FamesOS VER 0.5.124:
**------------------------------------------------------------------------------------
描述:

   1)  FamesOS实时操作系统(RTOS)

修改:

   1)  增加了对按键CTRL-C的处理, 因为这个按键会导致FamesOS的意外退出.

       其实只是简单的替换了Int0x23的中断向量(key.c)


版本:

   FamesOS-0.5.124, 2010-9-14

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

**------------------------------------------------------------------------------------
** FamesOS VER 0.5.123:
**------------------------------------------------------------------------------------
描述:

   1)  FamesOS实时操作系统(RTOS)

修改:

   1)  在Rtl8139j.h中定义的RTL8139J_DRV前面的宏检测是FAMES_NIC_RTL8139_C，这是错误的，
       应该是FAMES_NIC_RTL8139J_C.

   2)  PLC.C中, 任务task_for_plc()每执行一次plc_action()就应该睡眠1毫秒(需要再考虑)


版本:

   FamesOS-0.5.123, 2010-9-11

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

**------------------------------------------------------------------------------------
** FamesOS VER 0.5.122:
**------------------------------------------------------------------------------------
描述:

   1)  FamesOS实时操作系统(RTOS)

修改:

   1)  重新规划了GUI模块, 使其将成为一个真正的GUI系统, 预计特点如下:

       [1] 较完善的窗口管理, 支持窗口覆盖
       [2] 运行模式为消息驱动型
       [3] 支持加速键与鼠标事件
       [4] 等等等等~~

   2)  GUI模块分为5层来设计:

       [1] 最低层: GDI, 图形设备接口层, 提供图形设备驱动, 
                        具体表现为一组简单的函数, 如画点, 画横线, 画矩形等;
                        这部分代码需要最大优化以加快其运行速度, 
                        目前只支持基于VESA的驱动。
       [2] 中间层: GAL, 图形抽象层, 提供窗口元素的管理, 如控件管理等.
                        这部分是整个GUI系统的核心。
       [3] 策略层: GUI, 这部分体现了图形用户界面的运行策略, 其具体表现为
                        GUI消息及事件的定义与处理, 及与GUI有关的后台
                        任务(服务例程)等。
       [4] 系统层:      这部分其实是利用GUI模块实现的一个应用, 
                        只是其执行与整个系统有关, 比如桌面管理, 背景管理等。
       [5] 用户层:      这部分是用户实现的部分, 属于应用层。

   3)  关于图形抽象层GAL的一些规划(只是一些零散的想法):

       [1] 需实现3级Zorder, 分别为: 置底, 普通, 置顶.
       [2] 不需要逐点比较要显示的画面.
       [3] 在显示时, 与剪切域的比较部分在GAL中实现, GDI中的函数
           只应该实现原始的操作, 因为它并不知道什么叫做剪切域.
       [4] 在剪切域的计算中, 不要使用动态内存分配, 最好预先分配
           出一定的数量(比如200):
           
           struct cliprect {       //假设这是剪切域的定义
             int x, y, xx, yy;
             int next;
           };

           每一个这样的结构占用10个字节, 200个就是约2K个字节, 
           到底多少才够用, 需要运行确认(得以后再测)
       
版本:

   FamesOS-0.5.122, 2010-9-9

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

**------------------------------------------------------------------------------------
** FamesOS VER 0.5.121:
**------------------------------------------------------------------------------------
描述:

   1)  FamesOS实时操作系统(RTOS)

修改:

   1) debug: 按键当机: 经分析, DOS的键盘中断服务在运行时打开了中断标志, 
             导致了在中断执行过程中发生了任务切换, 我想可能就是这个原因.
             目前只是将原来的键盘中断(IRQ1)服务例程包装了一下, 以适应FamesOS对
             中断的要求(IntNesting++/IntNesting--).
   2) debug: 在串口驱动(rs232.c)中, 竟然不允许IRQ大于7, 目前已修正.
   3) 测试:  测试了在IRQ>7时的中断处理, 效果不错.
   4) 测试:  用一台Windows不停的发ping命令及tftp请求, 并联上PLC同时动作,
             效果很好, 而且在不断击键时, 仍然运行稳定.


版本:

   FamesOS-0.5.121, 2010-9-4

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

**------------------------------------------------------------------------------------
** FamesOS VER 0.5.120:
**------------------------------------------------------------------------------------
描述:

   1)  FamesOS实时操作系统(RTOS)

修改:

   1) 目录结构重新整理, 将OS部分分离出来.
   2) 更新makefile及批处理命令, 以适应新的目录结构


版本:

   FamesOS-0.5.120, 2010-9-3

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

**------------------------------------------------------------------------------------
** FamesOS VER 0.5.119:
**------------------------------------------------------------------------------------
描述:

   1)  基于优先级的, 可抢先式实时内核
   2)  简单tcp/ip协议栈
   3)  简单gui系统

修改:

   1) add:
        1.  gui部分(不完整)
        2.  gdi
        3.  bmp
        4.  font
        5.  vesa

笔记:

   1) tftpd可能还有问题
   2) tcp只写了个stub, 以后有时间再写吧.


版本:

   FamesOS-0.5.119, 2010-9-1

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:
    
        网络协议的实现还真不是好玩的(虽然有趣)。
        
        考虑良久, 终于还是决定只写一个够用的就可以了, 什么队列, 什么socket, 太麻烦,
    而且我的内存也不多啊, 目前就先这样吧。

        tftpd总好象还有点问题, 也不知道怎样才叫做全面测试, 不过效果看起来还不错, 
    速度也还可以(可达到100K以上)

        tcp有点麻烦, 先只写个stub, 以后再写

**------------------------------------------------------------------------------------
** FamesOS VER 0.5.118:
**------------------------------------------------------------------------------------
描述:

   1)  基于优先级的, 可抢先式实时内核
   2)  简单tcp/ip协议栈

修改:

   1) add:
        1.  udp协议处理
        2.  tftp服务器(tftpd)

笔记:

   1) 在编写ICMP协议处理时发现, 处理数据包的任务与网卡轮询任务必须分开, 
      因为数据包处理任务需要经常睡眠(有可能很久), 而网卡轮询任务则不能这样
   2) tftpd可能还有问题


版本:

   FamesOS-0.5.118, 2010-9-1

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:
    
        网络协议的实现还真不是好玩的(虽然有趣)。
        
        考虑良久, 终于还是决定只写一个够用的就可以了, 什么队列, 什么socket, 太麻烦,
    而且我的内存也不多啊, 目前就先这样吧。

        tftpd总好象还有点问题, 也不知道怎样才叫做全面测试, 不过效果看起来还不错, 
    速度也还可以(可达到100K以上)

**------------------------------------------------------------------------------------
** FamesOS VER 0.5.117:
**------------------------------------------------------------------------------------
描述:

   1)  基于优先级的, 可抢先式实时内核
   2)  简单tcp/ip协议栈

修改:

   1) debug:
           1.  TaskCreate()函数在分配TCB时, 没有检测是否成功, 修正之
   2) add:
        1.  ICMP协议处理(echo packet(ping))

笔记:

   1) 在编写ICMP协议处理时发现, 处理数据包的任务与网卡轮询任务必须分开, 
       因为数据包处理任务需要经常睡眠(有可能很久), 而网卡轮询任务则不能这样


版本:

   FamesOS-0.5.117, 2010-8-30

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

笔记:


**------------------------------------------------------------------------------------
** FamesOS VER 0.5.116:
**------------------------------------------------------------------------------------
描述:

   基于优先级的, 可抢先式实时内核

修改:

   1) 增加了TaskReturnCapture()函数, 用于捕获一个任务函数的返回, 
      这样, 任务函数就可以不必是无限循环.
   2) 在空闲任务中扫描所有的TCB结构, 以清理未完成的任务删除动作

笔记:


版本:

   FamesOS-0.5.116, 2010-8-21, 23:12

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)


**------------------------------------------------------------------------------------
** FamesOS VER 0.5.115:
**------------------------------------------------------------------------------------
描述:

   基于优先级的, 可抢先式实时内核

修改:

   1) 增加了ARP协议处理, 并测试之

笔记:


版本:

   FamesOS-0.5.115, 2010-8-21, 22:41

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)


**------------------------------------------------------------------------------------
** FamesOS VER 0.5.114:
**------------------------------------------------------------------------------------
描述:

   基于优先级的, 可抢先式实时内核

修改:

   1) 将源代码重新组织分类, 以便管理
   2) 重新设计了makefile
   3) 以太网数据包处理(eth.c),[不完整]
   4) 将版本号改为0.5

笔记:

   1) APICAL修饰符会避免一些编译器的问题(如堆栈清除的动作)
   2) 多个任务可具有同一个优先级
   3) 在PC上, 一些BIOS中断服务(如INT 16H)会在内部打开中断(STI), 这导致了
      临界区保护指令(ENTER_CRITICAL()与EXIT_CRITICAL())有时会失效, 应特别注意!

版本:

   FamesOS-0.5.114, 2010-8-20, 23:01

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)


**------------------------------------------------------------------------------------
** FamesOS VER 0.4.113:
**------------------------------------------------------------------------------------
描述:

   基于优先级的, 可抢先式实时内核

修改:

   1) 增加了TimerPulse()函数, 用于临时改变定时器的定时值
   2) 自己实现了中断向量操作函数(FamesSetVect()与FamesGetVect())

笔记:

   1) APICAL修饰符会避免一些编译器的问题(如堆栈清除的动作)
   2) 多个任务可具有同一个优先级
   3) 在PC上, 一些BIOS中断服务(如INT 16H)会在内部打开中断(STI), 这导致了
      临界区保护指令(ENTER_CRITICAL()与EXIT_CRITICAL())有时会失效, 应特别注意!

版本:

   FamesOS-0.4.113, 2010-8-18, 21:32

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)


**------------------------------------------------------------------------------------
** FamesOS VER 0.4.112:
**------------------------------------------------------------------------------------
描述:

   基于优先级的, 可抢先式实时内核

修改:

   1) 修正一些BUG, 达到lint-clean状态
   2) 修改了timer.c中的DPC处理方式   

笔记:

   1) APICAL修饰符会避免一些编译器的问题(如堆栈清除的动作)
   2) 多个任务可具有同一个优先级
   3) 在PC上, 一些BIOS中断服务(如INT 16H)会在内部打开中断(STI), 这导致了
      临界区保护指令(ENTER_CRITICAL()与EXIT_CRITICAL())有时会失效, 应特别注意!

版本:

   FamesOS-0.4.112, 2010-7-20, 21:32

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)


**------------------------------------------------------------------------------------
** FamesOS VER 0.4.111:
**------------------------------------------------------------------------------------
描述:

   基于优先级的, 可抢先式实时内核

修改:

   1) 修正一些BUG
   2) TaskWait()后, 在恢复的时候会当机
   3) TaskTimeTick()中分开了Wait与Sleep的处理
   

笔记:

   1) APICAL修饰符会避免一些编译器的问题(如堆栈清除的动作)
   2) 多个任务可具有同一个优先级
   3) 在PC上, 一些BIOS中断服务(如INT 16H)会在内部打开中断(STI), 这导致了
      临界区保护指令(ENTER_CRITICAL()与EXIT_CRITICAL())有时会失效, 应特别注意!

版本:

   FamesOS-0.4.111, 2010-7-17, 21:32

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

**------------------------------------------------------------------------------------
** FamesOS VER 0.4.110:
**------------------------------------------------------------------------------------
描述:

   基于优先级的, 可抢先式实时内核

修改:

   1) 修正一些BUG
   

笔记:

   1) APICAL修饰符会避免一些编译器的问题(如堆栈清除的动作)
   2) 多个任务可具有同一个优先级
   3) 在PC上, 一些BIOS中断服务(如INT 16H)会在内部打开中断(STI), 这导致了
      临界区保护指令(ENTER_CRITICAL()与EXIT_CRITICAL())有时会失效, 应特别注意!

版本:

   FamesOS-0.4.110, 2010-7-12, 21:32

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

**------------------------------------------------------------------------------------
** FamesOS VER 0.4.109:
**------------------------------------------------------------------------------------
描述:

   基于优先级的, 可抢先式实时内核

修改:

   1) 修正一些BUG
   

笔记:

   1) APICAL修饰符会避免一些编译器的问题(如堆栈清除的动作)
   2) 多个任务可具有同一个优先级
   3) 在PC上, 一些BIOS中断服务(如INT 16H)会在内部打开中断(STI), 这导致了
      临界区保护指令(ENTER_CRITICAL()与EXIT_CRITICAL())有时会失效, 应特别注意!

版本:

   FamesOS-0.4.109, 2010-7-10, 21:32

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

**------------------------------------------------------------------------------------
** FamesOS VER 0.4.108:
**------------------------------------------------------------------------------------
描述:

   基于优先级的, 可抢先式实时内核

修改:

   1) 加入互斥体支持
   2) 修正一些BUG
   

笔记:

   1) APICAL修饰符会避免一些编译器的问题(如堆栈清除的动作)
   2) 多个任务可具有同一个优先级
   3) 在PC上, 一些BIOS中断服务(如INT 16H)会在内部打开中断(STI), 这导致了
      临界区保护指令(ENTER_CRITICAL()与EXIT_CRITICAL())有时会失效, 应特别注意!

版本:

   FamesOS-0.4.108, 2010-7-9, 23:00

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

**------------------------------------------------------------------------------------
** FamesOS VER 0.3.107:
**------------------------------------------------------------------------------------
描述:

   基于优先级的, 可抢先式实时内核

修改:

   1) 任务可删除自己
   2) 修正了几个BUG
   

笔记:

   1) APICAL修饰符会避免一些编译器的问题(如堆栈清除的动作)
   2) 多个任务可具有同一个优先级
   3) 在PC上, 一些BIOS中断服务(如INT 16H)会在内部打开中断(STI), 这导致了
      临界区保护指令(ENTER_CRITICAL()与EXIT_CRITICAL())有时会失效, 应特别注意!

版本:

   FamesOS-0.3.107, 2010-7-8, 23:00

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

**------------------------------------------------------------------------------------
** FamesOS VER 0.3.106(0.3):
**------------------------------------------------------------------------------------
描述:

   基于优先级的, 可抢先式实时内核

修改:

   1) 增加了定时器管理(TIMER.C)
   

笔记:

   1) APICAL修饰符会避免一些编译器的问题(如堆栈清除的动作)
   2) 多个任务可具有同一个优先级
   3) 在PC上, 一些BIOS中断服务(如INT 16H)会在内部打开中断(STI), 这导致了
      临界区保护指令(ENTER_CRITICAL()与EXIT_CRITICAL())有时会失效, 应特别注意!
   4) 任务删除时不能删除自己(因为一个堆栈的问题没有解决,暂时先这样)

版本:

   FamesOS-0.3.106, 2010-7-8, 22:03

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

**------------------------------------------------------------------------------------
** FamesOS VER 0.2.105(0.2):
**------------------------------------------------------------------------------------
描述:

   基于优先级的, 可抢先式实时内核

修改:

   1) 增加了任务创建与任务删除函数(TaskCreate(), TaskDelete())
   2) 增加了统计任务(TaskStat()), 便于计算CPU使用率


笔记:

   1) APICAL修饰符会避免一些编译器的问题(如堆栈清除的动作)
   2) 多个任务可具有同一个优先级
   3) 在PC上, 一些BIOS中断服务(如INT 16H)会在内部打开中断(STI), 这导致了
      临界区保护指令(ENTER_CRITICAL()与EXIT_CRITICAL())有时会失效, 应特别注意!
   4) 任务删除时不能删除自己(因为一个堆栈的问题没有解决,暂时先这样)

版本:

   FamesOS-0.2.105, 2010-7-7, 21:13

作者:

   Jun(Email: FamesOS@126.com, QQ: 1135035506)

**------------------------------------------------------------------------------------
** FamesOS VER 0.1.104:
**------------------------------------------------------------------------------------
描述:

   预先固定任务, 支持优先级, 支持占先式调度

修改:

   1) 增加了基于优先级的调度算法
   2) 为FamesOS/API函数加上APICAL修饰符


笔记:

   1) APICAL修饰符会避免一些编译器的问题(如堆栈清除的动作)
   2) 多个任务可具有同一个优先级

版本:

   FamesOS-0.1.104, 2010-7-5, 22:31

作者:

   Jun(Email: FamesOS@126.com)

**------------------------------------------------------------------------------------
** FamesOS VER 0.1.103:
**------------------------------------------------------------------------------------
描述:

   预先固定任务, 不支持优先级, 支持占先式调度

修改:

   1) 修正了几个BUG(AppTask.C)

笔记:


版本:

   FamesOS-0.1.103, 2010-7-2, 18:59

作者:

   Jun(Email: FamesOS@126.com)

**------------------------------------------------------------------------------------
** FamesOS VER 0.1.102:
**------------------------------------------------------------------------------------
描述:

   预先固定任务, 不支持优先级, 支持占先式调度

修改:

   1) 支持占先式调度
   2) 版本的表示

笔记:


版本:

   FamesOS-0.1.102, 2010-6-30, 19:10

作者:

   Jun

**------------------------------------------------------------------------------------
** FamesOS VER 0.1:
**------------------------------------------------------------------------------------
描述:

   多任务操作系统, 合作多任务, 预先固定任务

修改:

   1) 改名为FamesOS, 版本号改为0.1
   2) 加入Idle任务

笔记:

   1) 一定要有Idle任务, 否则将会严重的影响中断响应时间(???)

版本:

   FamesOS-0.1, 2010-6-29, 22:28

作者:

   Jun

**------------------------------------------------------------------------------------
** FamsOS VER 0.0.1 ~ 0.0.99:
**------------------------------------------------------------------------------------
描述:

   小型多任务内核, 合作型, 预先固定任务


版本:

   FamsOS-0.0.X, 2010-6-29以前

作者:

   Jun

**------------------------------------------------------------------------------------
** END
**------------------------------------------------------------------------------------


